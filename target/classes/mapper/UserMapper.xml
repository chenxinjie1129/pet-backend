<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.petshome.api.repository.UserMapper">

    <!-- 结果映射 -->
    <resultMap id="BaseResultMap" type="com.petshome.api.model.entity.User">
        <id column="id" property="id" />
        <result column="username" property="username" />
        <result column="mobile" property="mobile" />
        <result column="password" property="password" />
        <result column="salt" property="salt" />
        <result column="nickname" property="nickname" />
        <result column="avatar" property="avatar" />
        <result column="gender" property="gender" />
        <result column="email" property="email" />
        <result column="status" property="status" />
        <result column="last_login_time" property="lastLoginTime" />
        <result column="last_login_ip" property="lastLoginIp" />
        <result column="create_time" property="createTime" />
        <result column="update_time" property="updateTime" />
    </resultMap>

    <!-- 公共列 -->
    <sql id="Base_Column_List">
        id, username, mobile, password, salt, nickname, avatar, gender, email, status,
        last_login_time, last_login_ip, create_time, update_time
    </sql>

    <!-- 根据ID查询用户 -->
    <select id="selectById" parameterType="java.lang.Long" resultMap="BaseResultMap">
        SELECT 
        <include refid="Base_Column_List" />
        FROM t_user
        WHERE id = #{id}
    </select>

    <!-- 根据用户名查询用户 -->
    <select id="selectByUsername" parameterType="java.lang.String" resultMap="BaseResultMap">
        SELECT 
        <include refid="Base_Column_List" />
        FROM t_user
        WHERE username = #{username}
    </select>

    <!-- 根据手机号查询用户 -->
    <select id="selectByMobile" parameterType="java.lang.String" resultMap="BaseResultMap">
        SELECT 
        <include refid="Base_Column_List" />
        FROM t_user
        WHERE mobile = #{mobile}
    </select>

    <!-- 查询所有用户 -->
    <select id="selectAll" resultMap="BaseResultMap">
        SELECT 
        <include refid="Base_Column_List" />
        FROM t_user
        ORDER BY id DESC
    </select>

    <!-- 插入用户 -->
    <insert id="insert" parameterType="com.petshome.api.model.entity.User" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO t_user (
            username, mobile, password, salt, nickname, avatar, gender, email, status,
            last_login_time, last_login_ip, create_time, update_time
        ) VALUES (
            #{username}, #{mobile}, #{password}, #{salt}, #{nickname}, #{avatar}, #{gender}, #{email}, #{status},
            #{lastLoginTime}, #{lastLoginIp}, NOW(), NOW()
        )
    </insert>

    <!-- 更新用户 -->
    <update id="update" parameterType="com.petshome.api.model.entity.User">
        UPDATE t_user
        <set>
            <if test="username != null">username = #{username},</if>
            <if test="mobile != null">mobile = #{mobile},</if>
            <if test="password != null">password = #{password},</if>
            <if test="salt != null">salt = #{salt},</if>
            <if test="nickname != null">nickname = #{nickname},</if>
            <if test="avatar != null">avatar = #{avatar},</if>
            <if test="gender != null">gender = #{gender},</if>
            <if test="email != null">email = #{email},</if>
            <if test="status != null">status = #{status},</if>
            <if test="lastLoginTime != null">last_login_time = #{lastLoginTime},</if>
            <if test="lastLoginIp != null">last_login_ip = #{lastLoginIp},</if>
            update_time = NOW()
        </set>
        WHERE id = #{id}
    </update>

    <!-- 删除用户 -->
    <delete id="deleteById" parameterType="java.lang.Long">
        DELETE FROM t_user WHERE id = #{id}
    </delete>

    <!-- 批量删除用户 -->
    <delete id="deleteByIds">
        DELETE FROM t_user WHERE id IN
        <foreach collection="ids" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

    <!-- 更新用户状态 -->
    <update id="updateStatus">
        UPDATE t_user
        SET status = #{status}, update_time = NOW()
        WHERE id = #{id}
    </update>

    <!-- 更新用户登录信息 -->
    <update id="updateLoginInfo">
        UPDATE t_user
        SET last_login_ip = #{ip}, last_login_time = NOW(), update_time = NOW()
        WHERE id = #{id}
    </update>

</mapper> 